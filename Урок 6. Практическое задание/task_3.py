"""
Задание 3 *.
Сделать профилировку для скриптов с рекурсией и сделать вывод,
можно так профилировать и есть ли 'подводные камни'

Замер времени исполнения с помощью timeit производится по обыденной схеме, только ни в коем случае нельзя это делать
вместе с активным декоратором профилировщика памяти =) иначе каждый тестовый прогон, вызывает декоративные выводы.
Профилирование рекурсии возможно, в этом случае возможно будет получить данные о используемых данных в кусе кода от
начала до рекурсивного вызова. Подводные камни начинаеются из того, что каждый рекурсивный вызов провоцирует создание
новых объектов в стеке, в каждый из которых входят ~15 Мб данных, занимаемых самим профирировщиком, соответственно
большие рекурсивные вызовы могут лавинообразно расходовать память. Для оценки подобным образом потребляемой памяти
нужно будет отдельно заниматься подсчетом.
"""
import timeit
from memory_profiler import profile


# @profile
def revert(item):
    if len(item) == 1:
        return item[0]
    else:
        return revert(item[1:]) + item[0]



# revert("1029384756")
time_check = timeit.Timer("revert('10293847593743823493246')", "from __main__ import revert")
print(time_check.timeit(number=1000))